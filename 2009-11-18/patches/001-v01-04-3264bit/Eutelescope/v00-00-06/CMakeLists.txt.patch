Index: CMakeLists.txt
===================================================================
RCS file: /eutelescope/Eutelescope/CMakeLists.txt,v
retrieving revision 1.6
diff -r1.6 CMakeLists.txt
38a39
> OPTION( BUILD_32BIT_COMPATIBLE "Set to ON to build in 32 bit compatibility mode" ON )
53c54
<     SET( CMAKE_INSTALL_PREFIX "${CMAKE_SOURCE_DIR}" )
---
>     SET( CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}" )
55a57,82
> #---------------- 32/64 bit issues ---------------------------------------
> #INCLUDE( CheckTypeSize )
> #CHECK_TYPE_SIZE( "void*" SIZE_OF_VOID_P )
> 
> IF( CMAKE_SIZEOF_VOID_P EQUAL 4 )
>     MESSAGE( STATUS "32 bit architecture detected" )
> ENDIF()
> 
> IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
>     MESSAGE( STATUS "64 bit architecture detected" )
> 
>     IF( BUILD_32BIT_COMPATIBLE )
>         IF( COMMAND SET_PROPERTY )
>             SET_PROPERTY(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS 0)
>             SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32" )
>         ELSE()
>             MESSAGE( FATAL_ERROR "to build in 32 bit compatibility mode you need cmake >= 2.6" )
>         ENDIF()
>         MESSAGE( STATUS "Build in 32 bit compatibility mode" )
>     ELSE()
>         MESSAGE( STATUS "Build in native 64 bit mode" )
>     ENDIF()
> ENDIF()
> 
> #-------------------------------------------------------------------------
> 
60c87
< INCLUDE_DIRECTORIES( "${CMAKE_SOURCE_DIR}/include" )
---
> INCLUDE_DIRECTORIES( "${PROJECT_SOURCE_DIR}/include" )
63c90
< INSTALL( DIRECTORY "${CMAKE_SOURCE_DIR}/include"
---
> INSTALL( DIRECTORY "${PROJECT_SOURCE_DIR}/include"
93c120
<         PATH_SUFFIXES main   
---
>         PATH_SUFFIXES bin   
110a138,140
> #----- need long long for int64 for now ------
> ADD_DEFINITIONS( "-Wno-long-long" )
> 
126c156
<         OUTPUT  "${CMAKE_SOURCE_DIR}/doc/html"
---
>         OUTPUT  "${PROJECT_SOURCE_DIR}/doc/html"
128c158
<         WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/doc"
---
>         WORKING_DIRECTORY "${PROJECT_SOURCE_DIR}/doc"
134c164
<         "${CMAKE_SOURCE_DIR}/doc/html" )
---
>         "${PROJECT_SOURCE_DIR}/doc/html" )
146c176
<     INSTALL( CODE "EXEC_PROGRAM(${CMAKE_BUILD_TOOL} ${CMAKE_BINARY_DIR} ARGS doc)" )
---
>     INSTALL( CODE "EXEC_PROGRAM(${CMAKE_BUILD_TOOL} ${PROJECT_BINARY_DIR} ARGS doc)" )
148c178
<     INSTALL( DIRECTORY "${CMAKE_SOURCE_DIR}/doc"
---
>     INSTALL( DIRECTORY "${PROJECT_SOURCE_DIR}/doc"
174c204
< SET( EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin" CACHE PATH
---
> SET( EXECUTABLE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/bin" CACHE PATH
176c206
< SET( LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/lib" CACHE PATH
---
> SET( LIBRARY_OUTPUT_PATH "${PROJECT_BINARY_DIR}/lib" CACHE PATH
215,216c245,246
< CONFIGURE_FILE( "${CMAKE_SOURCE_DIR}/cmake_uninstall.cmake.in"
<                 "${CMAKE_BINARY_DIR}/cmake_uninstall.cmake"
---
> CONFIGURE_FILE( "${PROJECT_SOURCE_DIR}/cmake_uninstall.cmake.in"
>                 "${PROJECT_BINARY_DIR}/cmake_uninstall.cmake"
221c251
<   "${CMAKE_COMMAND}" -P "${CMAKE_BINARY_DIR}/cmake_uninstall.cmake" )
---
>   "${CMAKE_COMMAND}" -P "${PROJECT_BINARY_DIR}/cmake_uninstall.cmake" )
224,225c254,255
< CONFIGURE_FILE( "${CMAKE_SOURCE_DIR}/${PROJECT_NAME}Config.cmake.in"
<                 "${CMAKE_BINARY_DIR}/${PROJECT_NAME}Config.cmake" @ONLY )
---
> CONFIGURE_FILE( "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}Config.cmake.in"
>                 "${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake" @ONLY )
228c258
< INSTALL( FILES "${CMAKE_BINARY_DIR}/${PROJECT_NAME}Config.cmake" DESTINATION . )
---
> INSTALL( FILES "${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake" DESTINATION . )
236a267,269
> IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
>     MESSAGE( STATUS "BUILD_32BIT_COMPATIBLE = ${BUILD_32BIT_COMPATIBLE}" )
> ENDIF()
259a293
> INSTALL( FILES "${PROJECT_BINARY_DIR}/${PROJECT_NAME}BuildSettings.cmake" DESTINATION lib/cmake )
262a297
> INSTALL( FILES "${PROJECT_BINARY_DIR}/${PROJECT_NAME}LibDeps.cmake" DESTINATION lib/cmake )
