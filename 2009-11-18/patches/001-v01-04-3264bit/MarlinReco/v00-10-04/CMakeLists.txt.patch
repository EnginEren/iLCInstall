Index: CMakeLists.txt
===================================================================
RCS file: /marlinreco/MarlinReco/CMakeLists.txt,v
retrieving revision 1.33
diff -r1.33 CMakeLists.txt
28,30c28,30
< SET( ${PROJECT_NAME}_MAJOR_VERSION 0 )
< SET( ${PROJECT_NAME}_MINOR_VERSION 10 )
< SET( ${PROJECT_NAME}_PATCH_LEVEL 4 )
---
> SET( MarlinReco_MAJOR_VERSION 0 )
> SET( MarlinReco_MINOR_VERSION 11 )
> SET( MarlinReco_PATCH_LEVEL 0 )
53a54
> OPTION( BUILD_32BIT_COMPATIBLE "Set to ON to build in 32 bit compatibility mode" ON )
57,58c58,59
< # e.g. SET( ${PROJECT_NAME}_DEPENDS "Marlin MarlinUtil LCIO GEAR CLHEP GSL RAIDA" )
< SET( ${PROJECT_NAME}_DEPENDS "Marlin MarlinUtil GEAR LCIO CLHEP GSL CERNLIB" )
---
> # e.g. SET( MarlinReco_DEPENDS "Marlin MarlinUtil LCIO GEAR CLHEP GSL RAIDA" )
> SET( MarlinReco_DEPENDS "Marlin MarlinUtil GEAR LCIO CLHEP GSL CERNLIB" )
70a72,100
> #---------------- 32/64 bit issues ---------------------------------------
> #INCLUDE( CheckTypeSize )
> #CHECK_TYPE_SIZE( "void*" SIZE_OF_VOID_P )
> 
> IF( CMAKE_SIZEOF_VOID_P EQUAL 4 )
>     MESSAGE( STATUS "32 bit architecture detected" )
> ENDIF()
> 
> IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
>     MESSAGE( STATUS "64 bit architecture detected" )
> 
>     IF( BUILD_32BIT_COMPATIBLE )
>         IF( COMMAND SET_PROPERTY )
>             SET_PROPERTY(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS 0)
>             SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32" )
>             SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32" )
>             SET( CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -m32" )
>         ELSE()
>             MESSAGE( FATAL_ERROR "to build in 32 bit compatibility mode you need cmake >= 2.6" )
>         ENDIF()
>         MESSAGE( STATUS "Build in 32 bit compatibility mode" )
>     ELSE()
>         MESSAGE( STATUS "Build in native 64 bit mode" )
>     ENDIF()
> ENDIF()
> 
> #-------------------------------------------------------------------------
> 
> 
150,153c180,181
< SET( ${PROJECT_NAME}_VERSION
<     "${${PROJECT_NAME}_MAJOR_VERSION}.${${PROJECT_NAME}_MINOR_VERSION}.${${PROJECT_NAME}_PATCH_LEVEL}" )
< SET( ${PROJECT_NAME}_SOVERSION
<     "${${PROJECT_NAME}_MAJOR_VERSION}.${${PROJECT_NAME}_MINOR_VERSION}" )
---
> SET( MarlinReco_SOVERSION "${MarlinReco_MAJOR_VERSION}.${MarlinReco_MINOR_VERSION}" )
> SET( MarlinReco_VERSION "${MarlinReco_SOVERSION}.${MarlinReco_PATCH_LEVEL}" )
178c206
< IF( DEFINED ${PROJECT_NAME}_DEPENDS OR DEFINED BUILD_WITH OR DEFINED LINK_WITH )
---
> IF( DEFINED MarlinReco_DEPENDS OR DEFINED BUILD_WITH OR DEFINED LINK_WITH )
197,198c225
< ADD_CUSTOM_TARGET( uninstall
<   "${CMAKE_COMMAND}" -P "${PROJECT_BINARY_DIR}/cmake_uninstall.cmake" )
---
> ADD_CUSTOM_TARGET( uninstall "${CMAKE_COMMAND}" -P "${PROJECT_BINARY_DIR}/cmake_uninstall.cmake" )
201,202c228,229
< CONFIGURE_FILE( "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}Config.cmake.in"
<                 "${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake" @ONLY )
---
> CONFIGURE_FILE( "${PROJECT_SOURCE_DIR}/MarlinRecoConfig.cmake.in"
>                 "${PROJECT_BINARY_DIR}/MarlinRecoConfig.cmake" @ONLY )
205c232
< INSTALL( FILES "${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake" DESTINATION . )
---
> INSTALL( FILES "${PROJECT_BINARY_DIR}/MarlinRecoConfig.cmake" DESTINATION . )
214,215c241,244
< MESSAGE( STATUS "${PROJECT_NAME}_DEPENDS = \"${${PROJECT_NAME}_DEPENDS}\"" )
< MESSAGE( STATUS "BUILD_WITH = \"${BUILD_WITH}\"" )
---
> IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
>     MESSAGE( STATUS "BUILD_32BIT_COMPATIBLE = ${BUILD_32BIT_COMPATIBLE}" )
> ENDIF()
> MESSAGE( STATUS "MarlinReco_DEPENDS = \"${MarlinReco_DEPENDS}\"" )
216a246
> MESSAGE( STATUS "BUILD_WITH = \"${BUILD_WITH}\"" )
226c256
<     "Where to install ${PROJECT_NAME}" FORCE )
---
>     "Where to install MarlinReco" FORCE )
236c266,267
< CMAKE_EXPORT_BUILD_SETTINGS( "${PROJECT_NAME}BuildSettings.cmake" )
---
> CMAKE_EXPORT_BUILD_SETTINGS( "MarlinRecoBuildSettings.cmake" )
> INSTALL( FILES "${PROJECT_BINARY_DIR}/MarlinRecoBuildSettings.cmake" DESTINATION lib/cmake )
239,240c270,271
< EXPORT_LIBRARY_DEPENDENCIES( "${PROJECT_NAME}LibDeps.cmake" )
< 
---
> EXPORT_LIBRARY_DEPENDENCIES( "MarlinRecoLibDeps.cmake" )
> INSTALL( FILES "${PROJECT_BINARY_DIR}/MarlinRecoLibDeps.cmake" DESTINATION lib/cmake )
