Index: src/CMakeLists.txt
===================================================================
RCS file: /marlinreco/MarlinReco/src/CMakeLists.txt,v
retrieving revision 1.22
diff -r1.22 CMakeLists.txt
29a30
>     #"PFOID"
339a341,352
> ####################################################################################################
> # PFOID
> #
> ## cxx sources
> #AUX_SOURCE_DIRECTORY( ../PFOID/src PFOID_cxx_srcs )
> #
> #SET_SOURCE_FILES_PROPERTIES( ${PFOID_cxx_srcs} PROPERTIES
> #    # require proper c++
> #    COMPILE_FLAGS "-Wall -ansi -pedantic" )
> #
> #SET( PFOID_srcs ${PFOID_cxx_srcs} )
> 
350a364,365
>     # all c++ sources need -Wno-long-long flag (due to lcio)
>     SET_SOURCE_FILES_PROPERTIES( ${${pkgName}_cxx_srcs} PROPERTIES COMPILE_FLAGS "-Wno-long-long" )
357,382c372,398
< # workaround for fortran cmake bug
< ADD_CUSTOM_TARGET( fix_f77_cmake_bug
< 
<     # SatoruJetFinder fix
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > original.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > this.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > YCUT.mod.proxy
< 
<     # BrahmsTracking fix
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > Monte.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > data.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > a.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > A.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > GEAR.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > of.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > helix.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > as.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > GRNDM.mod.proxy
<     COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > ranecu.mod.proxy
< 
<     WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
<     COMMENT "Fixing cmake fortran bug..." VERBATIM )
< 
< # establish dependency for fixing fortran bug
< ADD_DEPENDENCIES( lib_${PROJECT_NAME} fix_f77_cmake_bug )
< 
---
> # workaround for fortran cmake bug in cmake 2.4.x versions
> IF( "${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6 )
>     ADD_CUSTOM_TARGET( fix_f77_cmake_bug
>     
>         # SatoruJetFinder fix
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > original.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > this.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > YCUT.mod.proxy
>     
>         # BrahmsTracking fix
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > Monte.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > data.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > a.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > A.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > GEAR.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > of.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > helix.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > as.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > GRNDM.mod.proxy
>         COMMAND ${CMAKE_COMMAND} -E echo "dummy file: workaround for fortran cmake bug" > ranecu.mod.proxy
>     
>         WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
>         COMMENT "Fixing fortran bug for cmake 2.4 versions..." VERBATIM )
>     
>     # establish dependency for fixing fortran bug
>     ADD_DEPENDENCIES( lib_${PROJECT_NAME} fix_f77_cmake_bug )
> ENDIF()
400,407c416,423
< FIND_LIBRARY( G2C_LIB NAMES g2c PATHS
<     /usr/lib/gcc-lib/i386-redhat-linux/3.2.3    # SL3
<     /usr/lib/gcc/i386-redhat-linux/3.4.3        # SL4
<     /usr/lib/gcc/i386-redhat-linux/3.4.6        # SL5
<     /usr/lib/gcc/x86_64-redhat-linux/3.4.3      # SL4 64bit
<     /usr/lib64
<     NO_DEFAULT_PATH # prevent static library to be detected instead of shared one
< )
---
> #FIND_LIBRARY( G2C_LIB NAMES g2c PATHS
> #    /usr/lib/gcc-lib/i386-redhat-linux/3.2.3    # SL3
> #    /usr/lib/gcc/i386-redhat-linux/3.4.3        # SL4
> #    /usr/lib/gcc/i386-redhat-linux/3.4.6        # SL5
> #    /usr/lib/gcc/x86_64-redhat-linux/3.4.3      # SL4 64bit
> #    /usr/lib64
> #    NO_DEFAULT_PATH # prevent static library to be detected instead of shared one
> #)
