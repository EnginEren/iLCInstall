Index: CMakeLists.txt
===================================================================
RCS file: /ilctools/RAIDA/CMakeLists.txt,v
retrieving revision 1.14
diff -r1.14 CMakeLists.txt
19a20
> OPTION( BUILD_32BIT_COMPATIBLE "Set to ON to build in 32 bit compatibility mode" ON )
21c22
< OPTION( BUILD_RAIDA_EXAMPLE "Set to ON to build RAIDA example" OFF )
---
> OPTION( RAIDA_EXAMPLE "Set to ON to build RAIDA example" OFF )
23,24c24,25
< # project dependencies e.g. SET( ${PROJECT_NAME}_DEPENDS "ROOT;LCIO;Marlin" )
< SET( ${PROJECT_NAME}_DEPENDS "ROOT" )
---
> # project dependencies e.g. SET( RAIDA_DEPENDS "ROOT;LCIO;Marlin" )
> SET( RAIDA_DEPENDS "ROOT" )
27,29c28,30
< SET( ${PROJECT_NAME}_MAJOR_VERSION 1 )
< SET( ${PROJECT_NAME}_MINOR_VERSION 4 )
< SET( ${PROJECT_NAME}_PATCH_LEVEL 1 )
---
> SET( RAIDA_MAJOR_VERSION 1 )
> SET( RAIDA_MINOR_VERSION 4 )
> SET( RAIDA_PATCH_LEVEL 1 )
40a42,68
> #---------------- 32/64 bit issues ---------------------------------------
> #INCLUDE( CheckTypeSize )
> #CHECK_TYPE_SIZE( "void*" SIZE_OF_VOID_P )
> 
> IF( CMAKE_SIZEOF_VOID_P EQUAL 4 )
>     MESSAGE( STATUS "32 bit architecture detected" )
> ENDIF()
> 
> IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
>     MESSAGE( STATUS "64 bit architecture detected" )
> 
>     IF( BUILD_32BIT_COMPATIBLE )
>         IF( COMMAND SET_PROPERTY )
>             SET_PROPERTY(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS 0)
>             SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32" )
>         ELSE()
>             MESSAGE( FATAL_ERROR "to build in 32 bit compatibility mode you need cmake >= 2.6" )
>         ENDIF()
>         MESSAGE( STATUS "Build in 32 bit compatibility mode" )
>     ELSE()
>         MESSAGE( STATUS "Build in native 64 bit mode" )
>     ENDIF()
> ENDIF()
> 
> #-------------------------------------------------------------------------
> 
> 
44,47c72,73
< SET( ${PROJECT_NAME}_SOVERSION
<     "${${PROJECT_NAME}_MAJOR_VERSION}.${${PROJECT_NAME}_MINOR_VERSION}" )
< SET( ${PROJECT_NAME}_VERSION
<     "${${PROJECT_NAME}_SOVERSION}.${${PROJECT_NAME}_PATCH_LEVEL}" )
---
> SET( RAIDA_SOVERSION "${RAIDA_MAJOR_VERSION}.${RAIDA_MINOR_VERSION}" )
> SET( RAIDA_VERSION "${RAIDA_SOVERSION}.${RAIDA_PATCH_LEVEL}" )
69a96
> 
72c99
< IF( DEFINED ${PROJECT_NAME}_DEPENDS OR DEFINED BUILD_WITH OR DEFINED LINK_WITH )
---
> IF( DEFINED RAIDA_DEPENDS OR DEFINED BUILD_WITH OR DEFINED LINK_WITH )
94,95c121,122
< CONFIGURE_FILE( "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}Config.cmake.in"
<                 "${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake" @ONLY )
---
> CONFIGURE_FILE( "${PROJECT_SOURCE_DIR}/RAIDAConfig.cmake.in"
>                 "${PROJECT_BINARY_DIR}/RAIDAConfig.cmake" @ONLY )
98c125
< INSTALL( FILES "${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake" DESTINATION . )
---
> INSTALL( FILES "${PROJECT_BINARY_DIR}/RAIDAConfig.cmake" DESTINATION . )
113a141,143
> IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
>     MESSAGE( STATUS "BUILD_32BIT_COMPATIBLE = ${BUILD_32BIT_COMPATIBLE}" )
> ENDIF()
125c155
<     "Where to install ${PROJECT_NAME}" FORCE )
---
>     "Where to install RAIDA" FORCE )
130c160
< SET( BUILD_RAIDA_EXAMPLE "${BUILD_RAIDA_EXAMPLE}" CACHE BOOL
---
> SET( RAIDA_EXAMPLE "${RAIDA_EXAMPLE}" CACHE BOOL
137c167,168
< CMAKE_EXPORT_BUILD_SETTINGS( "${PROJECT_NAME}BuildSettings.cmake" )
---
> CMAKE_EXPORT_BUILD_SETTINGS( "RAIDABuildSettings.cmake" )
> INSTALL( FILES "${PROJECT_BINARY_DIR}/RAIDABuildSettings.cmake" DESTINATION lib/cmake )
140c171,173
< EXPORT_LIBRARY_DEPENDENCIES( "${PROJECT_NAME}LibDeps.cmake" )
---
> EXPORT_LIBRARY_DEPENDENCIES( "RAIDALibDeps.cmake" )
> INSTALL( FILES "${PROJECT_BINARY_DIR}/RAIDALibDeps.cmake" DESTINATION lib/cmake )
> 
