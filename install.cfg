###############################################################
#
# Example Configuration file for installing the ILC Software
#
# Author: Jan Engels, DESY
# Date: Jan, 2007
#
###############################################################


# ILCSoft( "install path for ILC software")
ilcsoft = ILCSoft("/scratch/ilcsoft/myinstall")

# Python variable for referring the ILC Home directory
# only for SL3 and SL4 users
ilcPath = "/afs/desy.de/group/it/ilcsoft/v01-03/"

# Global variables              # default values are shown between ( )
#ilcsoft.debug = True           # build in debug mode (False)
#ilcsoft.buildDoc = False       # build documentation (True)
#ilcsoft.downloadOnly = True    # download software only (False)
ilcsoft.useCMake = True         # use CMake building tool (False)

#ilcsoft.env["FC"]="gfortran"   # example of a global environment variable

# Marlin
ilcsoft.install( Marlin( "HEAD" ))
ilcsoft.module("Marlin").env["MARLIN_GUI"] = 1

# QT (can be auto-detected if qmake is found in your PATH)
#ilcsoft.install( QT( "4.3.1" ))    # takes ~3 hours to compile on an Intel P4 3GHz!!
ilcsoft.use( QT( ilcPath + "QT/4.2.2" ))

# Marlin Packages
ilcsoft.install( MarlinReco( "HEAD" ))
ilcsoft.install( MarlinUtil( "HEAD" ))
ilcsoft.install( CEDViewer( "HEAD" ))
ilcsoft.install( PandoraPFA( "HEAD" ))
ilcsoft.install( SiliconDigi( "HEAD" ))
ilcsoft.install( LCFIVertex( "HEAD" ))
ilcsoft.install( Eutelescope( "HEAD" ))
ilcsoft.install( Overlay( "HEAD" ))
ilcsoft.install( MarlinTPC( "HEAD" ))

# Example of a custom Marlin package
#pandora = MarlinPKG( "PandoraPFA", "v01-01-01" )
#ilcsoft.install( pandora )
#pandora.download.root = "marlinreco"
#pandora.addDependency( [ "Marlin", "MarlinUtil", "LCIO" ] )

# GSL
#ilcsoft.install( GSL( "1.8" ))
ilcsoft.link( GSL( ilcPath + "gsl/1.8" ))

# CLHEP
#ilcsoft.install( CLHEP( "2.0.3.1" ))
#ilcsoft.install( HepPDT( "2.03.00" ))
ilcsoft.link( CLHEP( ilcPath + "CLHEP/2.0.3.1" ))

# CERNLIB
#ilcsoft.install( CERNLIB( "2006" ))
ilcsoft.link( CERNLIB( ilcPath + "cernlib/2006" ))

# CED
#ilcsoft.install( CED( "v00-03" ))
ilcsoft.link( CED( ilcPath + "CED/v00-03" ))

# LCIO
#ilcsoft.install( LCIO( "v01-09" ))
ilcsoft.link( LCIO( ilcPath + "lcio/v01-09" ))

# GEAR
#ilcsoft.install( GEAR( "v00-07" ))
ilcsoft.link( GEAR( ilcPath + "gear/v00-07" ))

# LCCD
#ilcsoft.install( LCCD( "v00-03-06" ))
ilcsoft.link( LCCD( ilcPath + "lccd/v00-03-06" ))

# CondDBMySQL
#ilcsoft.install( CondDBMySQL( "CondDBMySQL_ILC-0-5-10" ))
ilcsoft.link( CondDBMySQL( ilcPath + "CondDBMySQL/CondDBMySQL_ILC-0-5-10" ))

# MySQL
ilcsoft.link( MySQL( ilcPath+"mysql/5.0.26" ))

# RAIDA
#ilcsoft.install( RAIDA( "v01-03" ))
ilcsoft.link( RAIDA( ilcPath + "RAIDA/v01-03" ))

# ROOT
ilcsoft.link( ROOT( ilcPath + "root/5.08.00" ))

# Java (can be auto-detected if javac is found in your PATH)
if( ilcsoft.os.isSL3() ):   # SL3
    ilcsoft.link( Java( ilcPath + "java/1.5.0" ))
if( ilcsoft.os.isSL4() ):   # SL4
    ilcsoft.link( Java( ilcPath + "java/1.6.0" ))

# Mokka
ilcsoft.link( Mokka( ilcPath + "Mokka/mokka-06-05" ))

# Geant4
ilcsoft.link( Geant4( "/afs/desy.de/group/it/ilcsoft/geant4/9.0" ))
# if you don't have an env.sh script in the 'use/link' directory specified above for
# configuring geant4 use the following line (full path!) for defining another location:
ilcsoft.module( "Geant4" ).env["G4ENV_INIT"]="/afs/desy.de/group/it/ilcsoft/geant4/env_9.0.sh"

# AIDAJNI
#ilcsoft.link( AIDAJNI( "/opt/products/AIDAJNI/3.2.3" ))

# JAIDA
#ilcsoft.link( JAIDA( "/opt/products/JAIDA/3.2.3" ))

# CMake (can be auto-detected if cmake is found in your PATH)
#ilcsoft.install( CMake( "2.4.6" ))
ilcsoft.use( CMake( "/afs/desy.de/group/it/ilcsoft/CMake/2.4.6" ))

# CMakeModules
#ilcsoft.install( CMakeModules( "HEAD" ))
ilcsoft.link( CMakeModules( ilcPath + "CMakeModules/v01-05" ))

# end of configuration file

